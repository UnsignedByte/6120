@main(n: float) {
  speculate;
  v0: float = id n;
  __trace_taylor_series_euler_n: float = id v0;
  __trace_taylor_series_euler_v0: float = const 0.0;
  __trace_taylor_series_euler_e: float = id __trace_taylor_series_euler_v0;
  __trace_taylor_series_euler_v2: float = const 0.0;
  __trace_taylor_series_euler_i: float = id __trace_taylor_series_euler_v2;
  __trace_taylor_series_euler_v3: float = id __trace_taylor_series_euler_i;
  __trace_taylor_series_euler_v4: float = id __trace_taylor_series_euler_n;
  __trace_taylor_series_euler_v5: bool = flt __trace_taylor_series_euler_v3 __trace_taylor_series_euler_v4;
  __trace9_cond: bool = id __trace_taylor_series_euler_v5;
  guard __trace9_cond .__trace_failed;
  __trace_taylor_series_euler_v6: float = const 1.0;
  __trace_taylor_series_euler_v7: float = id __trace_taylor_series_euler_i;
  __trace_taylor_series_euler_factorial_n: float = id __trace_taylor_series_euler_v7;
  __trace_taylor_series_euler_factorial_v1: float = id __trace_taylor_series_euler_factorial_n;
  __trace_taylor_series_euler_factorial_v2: float = const 1.0;
  __trace_taylor_series_euler_factorial_v3: bool = fle __trace_taylor_series_euler_factorial_v1 __trace_taylor_series_euler_factorial_v2;
  __trace17_cond: bool = id __trace_taylor_series_euler_factorial_v3;
  guard __trace17_cond .__trace_failed;
  __trace_taylor_series_euler_factorial_v4: float = const 1.0;
  __trace_taylor_series_euler_v8: float = id __trace_taylor_series_euler_factorial_v4;
  __trace_taylor_series_euler_v9: float = fdiv __trace_taylor_series_euler_v6 __trace_taylor_series_euler_v8;
  __trace_taylor_series_euler_v10: float = id __trace_taylor_series_euler_e;
  __trace_taylor_series_euler_v11: float = fadd __trace_taylor_series_euler_v9 __trace_taylor_series_euler_v10;
  __trace_taylor_series_euler_e: float = id __trace_taylor_series_euler_v11;
  __trace_taylor_series_euler_v12: float = id __trace_taylor_series_euler_i;
  __trace_taylor_series_euler_v13: float = const 1.0;
  __trace_taylor_series_euler_v14: float = fadd __trace_taylor_series_euler_v12 __trace_taylor_series_euler_v13;
  __trace_taylor_series_euler_i: float = id __trace_taylor_series_euler_v14;
  __trace_taylor_series_euler_v3: float = id __trace_taylor_series_euler_i;
  __trace_taylor_series_euler_v4: float = id __trace_taylor_series_euler_n;
  __trace_taylor_series_euler_v5: bool = flt __trace_taylor_series_euler_v3 __trace_taylor_series_euler_v4;
  __trace32_cond: bool = id __trace_taylor_series_euler_v5;
  guard __trace32_cond .__trace_failed;
  __trace_taylor_series_euler_v6: float = const 1.0;
  __trace_taylor_series_euler_v7: float = id __trace_taylor_series_euler_i;
  __trace_taylor_series_euler_factorial_n: float = id __trace_taylor_series_euler_v7;
  __trace_taylor_series_euler_factorial_v1: float = id __trace_taylor_series_euler_factorial_n;
  __trace_taylor_series_euler_factorial_v2: float = const 1.0;
  __trace_taylor_series_euler_factorial_v3: bool = fle __trace_taylor_series_euler_factorial_v1 __trace_taylor_series_euler_factorial_v2;
  __trace40_cond: bool = id __trace_taylor_series_euler_factorial_v3;
  guard __trace40_cond .__trace_failed;
  __trace_taylor_series_euler_factorial_v4: float = const 1.0;
  __trace_taylor_series_euler_v8: float = id __trace_taylor_series_euler_factorial_v4;
  __trace_taylor_series_euler_v9: float = fdiv __trace_taylor_series_euler_v6 __trace_taylor_series_euler_v8;
  __trace_taylor_series_euler_v10: float = id __trace_taylor_series_euler_e;
  __trace_taylor_series_euler_v11: float = fadd __trace_taylor_series_euler_v9 __trace_taylor_series_euler_v10;
  __trace_taylor_series_euler_e: float = id __trace_taylor_series_euler_v11;
  __trace_taylor_series_euler_v12: float = id __trace_taylor_series_euler_i;
  __trace_taylor_series_euler_v13: float = const 1.0;
  __trace_taylor_series_euler_v14: float = fadd __trace_taylor_series_euler_v12 __trace_taylor_series_euler_v13;
  __trace_taylor_series_euler_i: float = id __trace_taylor_series_euler_v14;
  __trace_taylor_series_euler_v3: float = id __trace_taylor_series_euler_i;
  __trace_taylor_series_euler_v4: float = id __trace_taylor_series_euler_n;
  __trace_taylor_series_euler_v5: bool = flt __trace_taylor_series_euler_v3 __trace_taylor_series_euler_v4;
  __trace55_cond: bool = id __trace_taylor_series_euler_v5;
  guard __trace55_cond .__trace_failed;
  __trace_taylor_series_euler_v6: float = const 1.0;
  __trace_taylor_series_euler_v7: float = id __trace_taylor_series_euler_i;
  __trace_taylor_series_euler_factorial_n: float = id __trace_taylor_series_euler_v7;
  __trace_taylor_series_euler_factorial_v1: float = id __trace_taylor_series_euler_factorial_n;
  __trace_taylor_series_euler_factorial_v2: float = const 1.0;
  __trace_taylor_series_euler_factorial_v3: bool = fle __trace_taylor_series_euler_factorial_v1 __trace_taylor_series_euler_factorial_v2;
  __trace63_cond: bool = not __trace_taylor_series_euler_factorial_v3;
  guard __trace63_cond .__trace_failed;
  __trace_taylor_series_euler_factorial_v5: float = id __trace_taylor_series_euler_factorial_n;
  __trace_taylor_series_euler_factorial_v6: float = const 1.0;
  __trace_taylor_series_euler_factorial_v7: float = fsub __trace_taylor_series_euler_factorial_v5 __trace_taylor_series_euler_factorial_v6;
  __trace_taylor_series_euler_factorial_factorial_n: float = id __trace_taylor_series_euler_factorial_v7;
  __trace_taylor_series_euler_factorial_factorial_v1: float = id __trace_taylor_series_euler_factorial_factorial_n;
  __trace_taylor_series_euler_factorial_factorial_v2: float = const 1.0;
  __trace_taylor_series_euler_factorial_factorial_v3: bool = fle __trace_taylor_series_euler_factorial_factorial_v1 __trace_taylor_series_euler_factorial_factorial_v2;
  __trace72_cond: bool = id __trace_taylor_series_euler_factorial_factorial_v3;
  guard __trace72_cond .__trace_failed;
  __trace_taylor_series_euler_factorial_factorial_v4: float = const 1.0;
  __trace_taylor_series_euler_factorial_v8: float = id __trace_taylor_series_euler_factorial_factorial_v4;
  __trace_taylor_series_euler_factorial_v9: float = id __trace_taylor_series_euler_factorial_n;
  __trace_taylor_series_euler_factorial_v10: float = fmul __trace_taylor_series_euler_factorial_v8 __trace_taylor_series_euler_factorial_v9;
  __trace_taylor_series_euler_v8: float = id __trace_taylor_series_euler_factorial_v10;
  __trace_taylor_series_euler_v9: float = fdiv __trace_taylor_series_euler_v6 __trace_taylor_series_euler_v8;
  __trace_taylor_series_euler_v10: float = id __trace_taylor_series_euler_e;
  __trace_taylor_series_euler_v11: float = fadd __trace_taylor_series_euler_v9 __trace_taylor_series_euler_v10;
  __trace_taylor_series_euler_e: float = id __trace_taylor_series_euler_v11;
  __trace_taylor_series_euler_v12: float = id __trace_taylor_series_euler_i;
  __trace_taylor_series_euler_v13: float = const 1.0;
  __trace_taylor_series_euler_v14: float = fadd __trace_taylor_series_euler_v12 __trace_taylor_series_euler_v13;
  __trace_taylor_series_euler_i: float = id __trace_taylor_series_euler_v14;
  __trace_taylor_series_euler_v3: float = id __trace_taylor_series_euler_i;
  __trace_taylor_series_euler_v4: float = id __trace_taylor_series_euler_n;
  __trace_taylor_series_euler_v5: bool = flt __trace_taylor_series_euler_v3 __trace_taylor_series_euler_v4;
  __trace90_cond: bool = id __trace_taylor_series_euler_v5;
  guard __trace90_cond .__trace_failed;
  __trace_taylor_series_euler_v6: float = const 1.0;
  __trace_taylor_series_euler_v7: float = id __trace_taylor_series_euler_i;
  __trace_taylor_series_euler_factorial_n: float = id __trace_taylor_series_euler_v7;
  __trace_taylor_series_euler_factorial_v1: float = id __trace_taylor_series_euler_factorial_n;
  __trace_taylor_series_euler_factorial_v2: float = const 1.0;
  __trace_taylor_series_euler_factorial_v3: bool = fle __trace_taylor_series_euler_factorial_v1 __trace_taylor_series_euler_factorial_v2;
  __trace98_cond: bool = not __trace_taylor_series_euler_factorial_v3;
  guard __trace98_cond .__trace_failed;
  commit;
  jmp .__trace_succeeded;
.__trace_failed:
  v0: float = id n;
.__trace_succeeded:
  e: float = call @taylor_series_euler v0;
  e: float = id e;
  v1: float = id e;
  print v1;
  v2: int = const 0;
}
@factorial(n: float): float {
  v1: float = id n;
  v2: float = const 1.0;
  v3: bool = fle v1 v2;
  br v3 .then.0 .else.0;
.then.0:
  v4: float = const 1.0;
  ret v4;
  jmp .endif.0;
.else.0:
.endif.0:
  v5: float = id n;
  v6: float = const 1.0;
  v7: float = fsub v5 v6;
  v8: float = call @factorial v7;
  v9: float = id n;
  v10: float = fmul v8 v9;
  ret v10;
}
@taylor_series_euler(n: float): float {
  v0: float = const 0.0;
  e: float = id v0;
  v2: float = const 0.0;
  i: float = id v2;
.for.cond.1:
  v3: float = id i;
  v4: float = id n;
  v5: bool = flt v3 v4;
  br v5 .for.body.1 .for.end.1;
.for.body.1:
  v6: float = const 1.0;
  v7: float = id i;
  v8: float = call @factorial v7;
  v9: float = fdiv v6 v8;
  v10: float = id e;
  v11: float = fadd v9 v10;
  e: float = id v11;
  v12: float = id i;
  v13: float = const 1.0;
  v14: float = fadd v12 v13;
  i: float = id v14;
  jmp .for.cond.1;
.for.end.1:
  v15: float = id e;
  ret v15;
}

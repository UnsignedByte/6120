@main(iters: int) {
  speculate;
  one: int = const 1;
  _i_0: int = const 0;
  _cond_1: bool = lt _i_0 iters;
  guard _cond_1 .__trace_failed;
  _cond_2: bool = lt one iters;
  guard _cond_2 .__trace_failed;
  _x_3: int = const 2;
  _cond_4: bool = lt _x_3 iters;
  guard _cond_4 .__trace_failed;
  _x_5: int = const 3;
  _cond_6: bool = lt _x_5 iters;
  guard _cond_6 .__trace_failed;
  _x_7: int = const 4;
  _cond_8: bool = lt _x_7 iters;
  guard _cond_8 .__trace_failed;
  _x_9: int = const 5;
  _cond_10: bool = lt _x_9 iters;
  guard _cond_10 .__trace_failed;
  _x_11: int = const 6;
  _cond_12: bool = lt _x_11 iters;
  guard _cond_12 .__trace_failed;
  _x_13: int = const 7;
  _cond_14: bool = lt _x_13 iters;
  guard _cond_14 .__trace_failed;
  _x_15: int = const 8;
  _cond_16: bool = lt _x_15 iters;
  guard _cond_16 .__trace_failed;
  _x_17: int = const 9;
  _cond_18: bool = lt _x_17 iters;
  guard _cond_18 .__trace_failed;
  x: int = const 10;
  i: int = const 10;
  cond: bool = lt x iters;
  __trace53_cond: bool = not cond;
  guard __trace53_cond .__trace_failed;
  commit;
  jmp .__trace_succeeded;
.__trace_failed:
  one: int = const 1;
  i: int = const 0;
.head:
  cond: bool = lt i iters;
  br cond .body .end;
.body:
  x: int = add i one;
  i: int = id x;
.finally:
  jmp .head;
.end:
.__trace_succeeded:
  print i iters;
}
